version: '2'

volumes:
  postgres_data_local: {}
  postgres_backup_local: {}
  esdata1:
    driver: local

services:

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch-platinum:6.2.4
#    container_name: elasticsearch
#    environment: ['http.host=0.0.0.0', 'transport.host=127.0.0.1', 'ELASTIC_PASSWORD=elastic']
#    ports: ['127.0.0.1:9200:9200']
#    networks: ['stack']
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:6.2.4
#    container_name: kibana
#    environment:
#      - ELASTICSEARCH_USERNAME=elastic
#      - ELASTICSEARCH_PASSWORD=elastic
#    ports: ['127.0.0.1:5601:5601']
#    networks: ['stack']
#    depends_on: ['elasticsearch']


  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: semillero_local_django
    depends_on:
      - postgres
#      - elasticsearch
    volumes:
      - .:/app
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
#    networks: ['stack']
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: semillero_production_postgres
    volumes:
      - postgres_data_local:/var/lib/postgresql/data
      - postgres_backup_local:/backups
    env_file:
      - ./.envs/.local/.postgres
#    networks: ['stack']

  redis:
    image: redis:3.2
#    networks: ['stack']

  celeryworker:
    <<: *django
    image: semillero_local_celeryworker
    depends_on:
      - redis
      - postgres

    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports: []
    command: /start-celeryworker
#    networks: ['stack']

  celerybeat:
    <<: *django
    image: semillero_local_celerybeat
    depends_on:
      - redis
      - postgres

    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports: []
    command: /start-celerybeat
#    networks: ['stack']

#networks: {stack: {}}
